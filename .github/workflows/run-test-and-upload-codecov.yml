name: CI Workflow with Unit Tests and Codecov

on:
  push:
    branches: [ "main", "object_detection_navigation" ]
  pull_request:
    branches: [ "main", "object_detection_navigation" ]
    types: [opened]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: osrf/ros:humble-desktop

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup ROS 2 environment
      - name: Set up ROS 2 environment
        run: |
          source /opt/ros/humble/setup.bash
          sudo apt-get update
          sudo apt-get install -y python3-pip
          python3 -m pip install --upgrade setuptools
          python3 -m pip install ament-package
          sudo apt-get install -y ros-humble-rosidl-typesupport-c ros-humble-rosidl-generator-c ros-humble-builtin-interfaces ros-humble-std-msgs

      # Install necessary build tools and dependencies
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-colcon-common-extensions

      # Install ROS 2 dependencies
      - name: Install ROS 2 dependencies
        run: |
          sudo apt update
          sudo apt install -y ros-humble-rosidl-typesupport-c ros-humble-rosidl-generator-c ros-humble-builtin-interfaces ros-humble-std-msgs
          rosdep update

      # Build the workspace
      - name: Build workspace
        run: |
          source /opt/ros/humble/setup.bash
          cd ~/workspace
          colcon build --symlink-install

      # Run tests and generate coverage report
      - name: Run tests and generate coverage report
        run: |
          source /opt/ros/humble/setup.bash
          cd ~/workspace
          ./do-tests.bash

      # Upload coverage results to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/build/test_coverage_merged.info
          fail_ci_if_error: true
          verbose: true